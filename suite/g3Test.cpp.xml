<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="g3Test.cpp"><class>class <name>g3Test</name> <super>: <specifier>public</specifier> <name><name>CppUnit</name><operator>::</operator><name>TestFixture</name></name></super> <block>{<private type="default">
	
  </private><public>public:
	<comment type="block" format="doxygen">/** @stereotype command equality_verifier */</comment>
	<function stereotype="command collaborator equality_verifier "><type><name>void</name></type> <name>testRun</name><parameter_list>()</parameter_list><block>{
		<expr_stmt><expr><call><name>CPPUNIT_ASSERT_EQUAL</name><argument_list>(<argument><expr><literal type="number">1.2f</literal></expr></argument>, <argument><expr><call><name>greater3</name><argument_list>(<argument><expr><literal type="number">1.2</literal></expr></argument>, <argument><expr><literal type="number">0.26</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1.2</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>CPPUNIT_ASSERT_EQUAL</name><argument_list>(<argument><expr><literal type="number">0.0f</literal></expr></argument>, <argument><expr><call><name>greater3</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">3.2</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>CPPUNIT_ASSERT_EQUAL</name><argument_list>(<argument><expr><literal type="number">3.0f</literal></expr></argument>, <argument><expr><call><name>greater3</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>CPPUNIT_ASSERT_EQUAL</name><argument_list>(<argument><expr><literal type="number">5.1f</literal></expr></argument>, <argument><expr><call><name>greater3</name><argument_list>(<argument><expr><literal type="number">5.1</literal></expr></argument>, <argument><expr><literal type="number">5.1</literal></expr></argument>, <argument><expr><literal type="number">5.1</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>CPPUNIT_ASSERT_EQUAL</name><argument_list>(<argument><expr><literal type="number">61.02f</literal></expr></argument>, <argument><expr><call><name>greater3</name><argument_list>(<argument><expr><literal type="number">61.02</literal></expr></argument>, <argument><expr><literal type="number">61.02</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>CPPUNIT_ASSERT_EQUAL</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5.0f</literal></expr></argument>, <argument><expr><call><name>greater3</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">26</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">10</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	}</block></function>
</public>}</block>;</class>
</unit>
